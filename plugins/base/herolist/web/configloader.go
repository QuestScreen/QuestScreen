// generated by qs-build. do not edit.

package web

import (
	"encoding/json"
	"errors"

	p1 "github.com/QuestScreen/QuestScreen/plugins/base/herolist"
	p2 "github.com/QuestScreen/QuestScreen/plugins/base/herolist"
	p3 "github.com/QuestScreen/QuestScreen/plugins/base/herolist"
	"github.com/QuestScreen/api/web/config"
	"github.com/QuestScreen/api/web/server"
)

// LoadConfig loads configuration values of this module.
func LoadConfig(ctx server.Context, input []byte) (map[string]config.Controller, error) {
	var items map[string]json.RawMessage
	if err := json.Unmarshal(input, items); err != nil {
		return nil, err
	}
	ret := make(map[string]config.Controller)
	{
		raw, ok := items["NameFont"]
		if !ok {
			return nil, errors.New("field missing: " + "NameFont")
		}
		var value p1.Controller
		if err := json.Unmarshal(raw, value); err != nil {
			return nil, errors.New("in config item NameFont: " + err.Error())
		}
		ret["NameFont"] = value
		delete(items, "NameFont")
	}
	{
		raw, ok := items["DescrFont"]
		if !ok {
			return nil, errors.New("field missing: " + "DescrFont")
		}
		var value p2.Controller
		if err := json.Unmarshal(raw, value); err != nil {
			return nil, errors.New("in config item DescrFont: " + err.Error())
		}
		ret["DescrFont"] = value
		delete(items, "DescrFont")
	}
	{
		raw, ok := items["Background"]
		if !ok {
			return nil, errors.New("field missing: " + "Background")
		}
		var value p3.Controller
		if err := json.Unmarshal(raw, value); err != nil {
			return nil, errors.New("in config item Background: " + err.Error())
		}
		ret["Background"] = value
		delete(items, "Background")
	}
	for key := range items {
		return nil, errors.New("unknown field: " + key)
	}
	return ret, nil
}
